- name: mkdir rke2
  win_file:
    path: C:\etc\rancher\rke2
    state: directory

- name: copy config
  win_copy:
    content: |
      server: https://{{ hostvars[groups['masters'].0]['ansible_default_ipv4']['address'] }}:9345
      token: {{ rke2_token }}
      {% if (node_taints is defined and node_taints|length > 0) %}
      node-taint:
      {% for taint in node_taints %}
        - {{ taint }}
      {% endfor %}
      {% endif %}
    dest: C:\etc\rancher\rke2\config.yaml

- name: download rke2 install script
  win_get_url:
    url: https://raw.githubusercontent.com/rancher/rke2/master/install.ps1
    dest: .\install.ps1
  when: not rke2_airgap_mode

- name: Check if rke2 service is installed
  win_service:
    name: rke2
  register: rke2_service

- name: Check RKE2 version
  ansible.windows.win_powershell:
    script: |
      ((cmd.exe /c C:\usr\local\bin\rke2 --version | where-object {$_ -like "*rke2 version*"}) -Split " ")[2]
  changed_when: false
  register: installed_rke2_version
  when: rke2_service is defined

- name: print selected rke2 version
  ansible.builtin.debug:
    var: rke2_version

- name: print installed rke2 version
  ansible.builtin.debug:
    var: installed_rke2_version.output | default({})

- name: print rke2 installed version different
  ansible.builtin.debug:
    var: rke2_version not in (installed_rke2_version.output | default({}))

- name: copy airgap artifacts
  block:
    - name: create airgap directory
      win_file:
        path: "{{ rke2_tarball_images_path }}"
        state: directory
      when: rke2_airgap_mode
    - name: copy rke2 windows artifacts
      win_copy:
        src: "{{ rke2_airgap_copy_sourcepath }}/{{ item }}"
        dest: "{{ rke2_tarball_images_path }}/{{ item }}"
      with_items:
        - "rke2.windows-{{ rke2_architecture }}.tar.gz"
        - "rke2-windows-ltsc2022-{{ rke2_architecture }}-images.tar.gz"
        - "sha256sum-{{ rke2_architecture }}.txt"
    - name: copy rke2 powershell install script
      win_copy:
        src: "{{ rke2_airgap_copy_sourcepath }}/install.ps1"
        dest: .\install.ps1
  when: rke2_airgap_mode

- name: stop service if upgrade is needed
  win_service:
    name: rke2
    state: stopped
  when: installed_rke2_version is not defined or rke2_version not in ( installed_rke2_version.output | default({}))

- name: clear /usr/local
  win_file:
    path: C:\usr\local
    state: absent
  when: installed_rke2_version is not defined or rke2_version not in ( installed_rke2_version.output | default({}))

- name: add bin to path
  win_path:
    elements:
      - 'c:\var\lib\rancher\rke2\bin'
      - 'c:\usr\local\bin'

- name: Run install script
  ansible.windows.win_powershell:
    script: |
      .\install.ps1 -Version '{{ rke2_version }}' -Type agent {% if rke2_airgap_mode %}-ArtifactPath '{{ rke2_tarball_images_path }}'{% endif %}
  when: installed_rke2_version is not defined or rke2_version not in ( installed_rke2_version.output | default({}))

- name: install agent
  ansible.windows.win_powershell:
    script: |
      rke2.exe agent service --add
  register: script_return
  when: installed_rke2_version is not defined or rke2_version not in ( installed_rke2_version.output | default({}))

- name: start rke2 service
  win_service:
    name: rke2
    start_mode: auto
    state: started
